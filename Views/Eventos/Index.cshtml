<!-- SUSTITUYE todo tu c√≥digo actual por esto -->
@{
    ViewData["Title"] = "Eventos de Teatro - En Escena Madrid";
}

<div class="container">
    <h1>üé≠ Eventos de Teatro en Madrid</h1>
    
    <!-- DEBUG: Verificar qu√© datos tenemos -->
    <div style="background: #f0f0f0; padding: 15px; margin: 10px 0;">
        <h3>üîç DEBUG - Informaci√≥n de datos:</h3>
        <p><strong>Tipo de Model:</strong> @(Model?.GetType().Name ?? "Ninguno")</p>
        <p><strong>¬øModel es null?:</strong> @(Model == null ? "S√ç" : "NO")</p>
        
        @if (Model != null)
        {
            <p><strong>Datos disponibles:</strong> Hay informaci√≥n</p>
        }
    </div>

    <!-- PRIMERA SALA - Sin variables intermedias -->
    <div style="background: #e3f2fd; padding: 15px; margin: 10px 0;">
        <h3>üìã PRIMERA SALA - Estructura de datos:</h3>
        
        @if (Model?.Contenidos != null && Model.Contenidos.Count > 0)
        {
            <p><strong>Total salas encontradas:</strong> @Model.Contenidos.Count</p>
            
            <h4>üé≠ Datos de la primera sala:</h4>
            <p><strong>Tipo:</strong> @(Model.Contenidos[0].Tipo ?? "Sin tipo")</p>
            
            @if (Model.Contenidos[0].Atributos?.ListaAtributos != null)
            {
                <p><strong>N√∫mero de atributos:</strong> @Model.Contenidos[0].Atributos.ListaAtributos.Count</p>
                
                <h5>üìù TODOS los atributos de la primera sala:</h5>
                @for (int i = 0; i < Model.Contenidos[0].Atributos.ListaAtributos.Count; i++)
                {
                    var atributo = Model.Contenidos[0].Atributos.ListaAtributos[i];
                    <p>‚Ä¢ <strong>@(atributo.Nombre ?? "Sin nombre"):</strong> 
                    @(string.IsNullOrEmpty(atributo.Valor) ? "[Vac√≠o]" : 
                        atributo.Valor.Length > 100 ? atributo.Valor.Substring(0, 100) + "..." : atributo.Valor)
                    </p>
                }
            }
        }
        else
        {
            <p>‚ùå No hay contenidos en la respuesta</p>
        }
    </div>
    
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger">
            @ViewBag.Error
        </div>
    }

<!-- CARDS DE SALAS CON INFORMACI√ìN COMPLETA -->
<div style="background: #f9f9f9; padding: 15px; margin: 10px 0;">
    <h3>üé≠ TODAS LAS SALAS DE MADRID:</h3>
    
    @if (Model?.Contenidos != null)
    {
        @for (int i = 0; i < Model.Contenidos.Count; i++)
        {
            <div style="background: white; padding: 15px; margin: 10px 0; border-radius: 8px; border-left: 4px solid #B8283A; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                @{
                    // Obtener la lista de atributos
                    var listaAtributos = Model.Contenidos[i].Atributos?.ListaAtributos as IEnumerable<dynamic>;
                    
                    // Buscar atributos principales
                    var nombreAtributo = listaAtributos?.FirstOrDefault((Func<dynamic, bool>)(a => a.Nombre == "NOMBRE"));
                    var transporteAtributo = listaAtributos?.FirstOrDefault((Func<dynamic, bool>)(a => a.Nombre == "TRANSPORTE"));
                    var equipamientoAtributo = listaAtributos?.FirstOrDefault((Func<dynamic, bool>)(a => a.Nombre == "EQUIPAMIENTO"));
                    var urlAtributo = listaAtributos?.FirstOrDefault((Func<dynamic, bool>)(a => a.Nombre == "CONTENT-URL"));
                    var localizacionAtributo = listaAtributos?.FirstOrDefault((Func<dynamic, bool>)(a => a.Nombre == "LOCALIZACION"));

                    // Variables para construir
                    var nombreSala = nombreAtributo?.Valor ?? $"Sala {i + 1}";
                    var transporte = transporteAtributo?.Valor ?? "Informaci√≥n no disponible";
                    var equipamiento = equipamientoAtributo?.Valor ?? "Informaci√≥n no disponible";
                    var urlSitio = urlAtributo?.Valor;
                    
                    // Construir direcci√≥n y enlace a Google Maps
                    var direccionCompleta = "Direcci√≥n no disponible";
                    var googleMapsUrl = "";
                    
                    if (localizacionAtributo?.SubAtributos != null)
                    {
                        var subAtributos = (IEnumerable<dynamic>)localizacionAtributo.SubAtributos;
                        
                        // Extraer componentes de direcci√≥n
                        var claseVial = subAtributos.FirstOrDefault(s => s.Nombre == "CLASE-VIAL")?.Valor ?? "";
                        var nombreVia = subAtributos.FirstOrDefault(s => s.Nombre == "NOMBRE-VIA")?.Valor ?? "";
                        var numero = subAtributos.FirstOrDefault(s => s.Nombre == "NUM")?.Valor ?? "";
                        var codigoPostal = subAtributos.FirstOrDefault(s => s.Nombre == "CODIGO-POSTAL")?.Valor ?? "";
                        var localidad = subAtributos.FirstOrDefault(s => s.Nombre == "LOCALIDAD")?.Valor ?? "";
                        
                        // Extraer coordenadas para Google Maps
                        var latitud = subAtributos.FirstOrDefault(s => s.Nombre == "LATITUD")?.Valor ?? "";
                        var longitud = subAtributos.FirstOrDefault(s => s.Nombre == "LONGITUD")?.Valor ?? "";
                        
                        // Construir direcci√≥n completa
                        if (!string.IsNullOrEmpty(claseVial) && !string.IsNullOrEmpty(nombreVia))
                        {
                            direccionCompleta = $"{claseVial} {nombreVia}";
                            if (!string.IsNullOrEmpty(numero))
                                direccionCompleta += $", {numero}";
                            if (!string.IsNullOrEmpty(codigoPostal))
                                direccionCompleta += $" {codigoPostal}";
                            if (!string.IsNullOrEmpty(localidad))
                                direccionCompleta += $" {localidad}";
                        }
                        
                        // Crear enlace de Google Maps
                        if (!string.IsNullOrEmpty(latitud) && !string.IsNullOrEmpty(longitud))
                        {
                            googleMapsUrl = $"https://www.google.com/maps?q={latitud},{longitud}";
                        }
                    }
                }
                
                <!-- Contenido de la tarjeta -->
                <h4 style="color: #B8283A; margin-bottom: 10px;">üé≠ @nombreSala</h4>
                
                <p style="margin: 5px 0;">
                    <strong>üìç Direcci√≥n:</strong> @direccionCompleta
                    @if (!string.IsNullOrEmpty(googleMapsUrl))
                    {
                        <text> </text>
                        <a href="@googleMapsUrl" target="_blank" style="color: #B8283A; text-decoration: none; font-weight: 500;">
                            (mapa)
                        </a>
                    }
                </p>
                
                <p style="margin: 5px 0;"><strong>üöá Transporte:</strong> @transporte</p>
                
               <div style="margin: 5px 0;">
                    <strong>üèõÔ∏è Equipamiento/Aforo:</strong>
                    <div style="margin-left: 20px; font-size: 0.9em; color: #555; margin-top: 5px;">
                        @{
                            var equipamientoId = $"equip_{i}"; // ID √∫nico para cada card
                            var equipamientoCorto = equipamiento;
                            var tieneTextoLargo = equipamiento.Length > 250;
                            
                            if (tieneTextoLargo)
                            {
                                equipamientoCorto = equipamiento.Substring(0, 250);
                            }
                        }
                        
                        <!-- Texto corto siempre visible -->
                        <span id="@(equipamientoId)_corto">
                            @equipamientoCorto
                            @if (tieneTextoLargo)
                            {
                                <text>... </text>
                                <a href="javascript:void(0)" 
                                onclick="mostrarCompleto('@equipamientoId')" 
                                style="color: #B8283A; text-decoration: none; font-weight: 500;">
                                    ver m√°s
                                </a>
                            }
                        </span>
                        
                        <!-- Texto completo oculto inicialmente -->
                        @if (tieneTextoLargo)
                        {
                            <span id="@(equipamientoId)_completo" style="display: none;">
                                @equipamiento
                                <text> </text>
                                <a href="javascript:void(0)" 
                                onclick="ocultarCompleto('@equipamientoId')" 
                                style="color: #B8283A; text-decoration: none; font-weight: 500;">
                                    ver menos
                                </a>
                            </span>
                        }
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(urlSitio))
                {
                    <p style="margin: 10px 0;">
                        <strong>üåê Web:</strong> 
                        <a href="@urlSitio" target="_blank" style="color: #B8283A; text-decoration: none; font-weight: 500;">
                            Sitio web oficial
                        </a>
                    </p>
                }
            </div>
        }
    }
</div>
<script>
function mostrarCompleto(id) {
    document.getElementById(id + '_corto').style.display = 'none';
    document.getElementById(id + '_completo').style.display = 'inline';
}

function ocultarCompleto(id) {
    document.getElementById(id + '_corto').style.display = 'inline';
    document.getElementById(id + '_completo').style.display = 'none';
}
</script>
</div>